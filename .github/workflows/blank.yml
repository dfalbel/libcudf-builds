
name: Build libcudf

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
  workflow_dispatch:

jobs:
 
  build:
    
    runs-on: self-hosted
    container:
      image: nvidia/cuda:11.0.3-devel-ubuntu20.04
      options: --gpus all
      
    env:
      CUDF_HOME: cudf
      DEBIAN_FRONTEND: 'noninteractive'
      INSTALL_PREFIX: /libcudf
    
    defaults:
      run:
        shell: bash -l {0}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - run: |
          apt-get update -y
          apt-get install -y sudo software-properties-common dialog apt-utils git zip
      
      - uses: actions/checkout@v2
        
      # Runs a single command using the runners shell
      - name: Clone cudf repository
        run: |
          git clone https://github.com/rapidsai/cudf.git $CUDF_HOME
          cd $CUDF_HOME
          git submodule update --init --remote --recursive
      
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: cudf_dev
          environment-file: cudf/conda/environments/cudf_dev_cuda11.0.yml

      - name: Build libcudf
        run: |
          cd cudf
          ./build.sh libcudf
          
      - name: Build arrow with cuda
        run: |
          git clone --branch apache-arrow-1.0.1 https://github.com/apache/arrow
          cd arrow/cpp
          mkdir build
          cd build
          cmake .. -DARROW_CUDA=ON -DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs/ -DCMAKE_INSTALL_PREFIX=/libcudf
          cmake --build . --parallel 8
          make install
          
      - name: Build re2
        run: |
          git clone https://github.com/google/re2
          cd re2
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=/libcudf
          cmake --build . --parallel 8
          make install
      
      - name: Build rmm
        run: |
          git clone https://github.com/rapidsai/rmm
          cd rmm
          mkdir build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=/libcudf
          cmake --build . --parallel 8
          make install
          
      - name: Build spdlog
        run: |
          git clone https://github.com/gabime/spdlog.git
          cd spdlog && mkdir build && cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=/libcudf
          cmake --build . --parallel 8
          make install
          
      - run: |
          zip -r libcudf.zip /libcudf
          
      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: nightly
          assets: libcudf.zip
          
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: libcudf.zip
          name: Nightly
          tag_name: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/upload-artifact@v2
        with:
          name: libcudf
          path: /libcudf
