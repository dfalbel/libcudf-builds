name: Build libcuml

on:
  workflow_dispatch:

jobs:

  build:

    strategy:
      fail-fast: false
      matrix:
        cuda: ['11.4.2', '11.2.1']
        cuml: ['21.08']

    runs-on: self-hosted
    container:
      image: nvidia/cuda:${{ matrix.cuda }}-devel-ubuntu18.04
      options: --gpus all --shm-size=8192m

    env:
      CUML_HOME: /dev/shm/cuml
      DEBIAN_FRONTEND: 'noninteractive'
      BUILD_ARTIFACT_NAME: libcuml-${{ matrix.cuml }}-cuda${{ matrix.cuda }}

    defaults:
      run:
        shell: bash -l {0}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - run: |
          apt-get update -y
          apt-get install -y sudo software-properties-common dialog apt-utils git zip build-essential wget libblas-dev liblapack-dev

      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Clone cuml repository
        run: |
          git clone --single-branch --branch branch-${{ matrix.cuml }} https://github.com/rapidsai/cuml.git $CUML_HOME
          cd $CUML_HOME
          git submodule update --init --remote --recursive

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.21.x'

      - name: Build libcuml
        env:
          CXXFLAGS: "-Wno-sign-compare"
        run: |
          mkdir -p "${CUML_HOME}/cpp/build"
          cd "${CUML_HOME}/cpp/build"
          cmake .. \
            -DCMAKE_CUDA_ARCHITECTURES=ALL \
            -DSINGLEGPU=ON \
            -DBUILD_CUML_TESTS=OFF \
            -DBUILD_PRIMS_TESTS=OFF \
            -DBUILD_CUML_EXAMPLES=OFF \
            -DBUILD_CUML_BENCH=OFF \
            -DBUILD_CUML_PRIMS_BENCH=OFF
          cmake --build . --parallel 8
          cat ./CPackConfig.cmake
          cpack --config ./CPackConfig.cmake -G ZIP -D CPACK_PACKAGE_FILE_NAME=${BUILD_ARTIFACT_NAME} -B ../../..

      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: v${{ matrix.cuml }}-cuda${{ matrix.cuda }}
          assets: ${{ env.BUILD_ARTIFACT_NAME }}.zip
        continue-on-error: true

      - name: Release
        if: ${{ always() }}
        uses: softprops/action-gh-release@v1
        with:
          files: /dev/shm/${{ env.BUILD_ARTIFACT_NAME }}.zip
          name: v${{ matrix.cuml }}-cuda${{ matrix.cuda }}
          tag_name: v${{ matrix.cuml }}-cuda${{ matrix.cuda }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
