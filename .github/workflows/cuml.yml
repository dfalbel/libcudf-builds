name: Build libcuml

on:
  workflow_dispatch:

jobs:
 
  build:
  
    strategy:
      matrix: 
        cuda: ['11.4.2', '10.2']
        cuml: ['21.08']
        
    runs-on: self-hosted
    container:
      image: nvidia/cuda:${{ matrix.cuda }}-devel-ubuntu18.04
      options: --gpus all
      
    env:
      CUML_HOME: cuml
      DEBIAN_FRONTEND: 'noninteractive'
      INSTALL_PREFIX: /libcuml
    
    defaults:
      run:
        shell: bash -l {0}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - run: |
          apt-get update -y
          apt-get install -y sudo software-properties-common dialog apt-utils git zip build-essential wget libblas-dev liblapack-dev
      
      - uses: actions/checkout@v2
        
      # Runs a single command using the runners shell
      - name: Clone cuml repository
        run: |
          git clone --single-branch --branch branch-${{ matrx.cuml }} https://github.com/rapidsai/cuml.git $CUML_HOME
          cd $CUML_HOME
          git submodule update --init --remote --recursive
          
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.9
        with:
          cmake-version: '3.21.x'
          
      - name: Build libcuml
        run: |
          cd cuml
          cd cpp
          mkdir build
          cd build
          cmake .. \
            -DCMAKE_CUDA_ARCHITECTURES=ALL \
            -DSINGLEGPU=ON \
            -DBUILD_CUML_TESTS=OFF \
            -DBUILD_PRIMS_TESTS=OFF \
            -DBUILD_CUML_EXAMPLES=OFF \
            -DBUILD_CUML_BENCH=OFF \
            -DBUILD_CUML_PRIMS_BENCH=OFF \
            -DCMAKE_INSTALL_PREFIX=/libcuml
          cmake --build . --parallel 8
          cpack --config ./CPackConfig.cmake -G ZIP -D CPACK_PACKAGE_FILE_NAME=libcuml -B ../../..
          cat ./CPackConfig.cmake
          
      - name: Rename file
        run: |
          mv libcuml.zip libcuml-cu${{ matrix.cuda }}.zip
          
      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: v${{ matrix.cuml }}
          assets: libcuml-cu${{ matrix.cuda }}.zip
          
      - name: Release
        if: ${{ always() }}
        uses: softprops/action-gh-release@v1
        with:
          files: libcuml-cu${{ matrix.cuda }}.zip
          name: v${{ matrix.cuml }}
          tag_name: v${{ matrix.cuml }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: libcuml
          path: ./libcuml-cu${{ matrix.cuda }}.zip
