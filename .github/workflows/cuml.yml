name: Build libcuml

on:
  workflow_dispatch:

jobs:
 
  build:
    
    runs-on: self-hosted
    container:
      image: nvidia/cuda:11.2.2-devel-ubuntu18.04
      options: --gpus all
      
    env:
      CUML_HOME: cuml
      DEBIAN_FRONTEND: 'noninteractive'
      INSTALL_PREFIX: /libcuml
    
    defaults:
      run:
        shell: bash -l {0}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - run: |
          apt-get update -y
          apt-get install -y sudo software-properties-common dialog apt-utils git zip build-essential wget
      
      - uses: actions/checkout@v2
        
      # Runs a single command using the runners shell
      - name: Clone cuml repository
        run: |
          git clone --depth 1 --branch branch-21.06 https://github.com/rapidsai/cuml.git $CUML_HOME
          cd $CUML_HOME
          git submodule update --init --remote --recursive
          
          
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channel-priority: true
          miniconda-version: "latest"
          activate-environment: cudf_dev
      
      - name: Install mamba and install packages
        run: |
          conda install mamba -n base -c conda-forge
          mamba env update --file=cuml/conda/environments/cuml_dev_cuda11.2.yml
          
      - name: Build libcuml
        env: 
          CUML_EXTRA_CMAKE_ARGS: "-DBUILD_CUML_C_LIBRARY=OFF -DBUILD_CUML_TESTS=OFF -DBUILD_PRIMS_TESTS=OFF -DBUILD_CUML_EXAMPLES=OFF -DBUILD_CUML_BENCH=OFF -DBUILD_CUML_PRIMS_BENCH=OFF"
        run: |
          cd cuml
          ./build.sh libcuml -v --allgpuarch --singlegpu
          
      - name: Build spdlog
        run: |
          git clone --single-branch --branch v1.7.0 https://github.com/gabime/spdlog.git
          cd spdlog && mkdir build && cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=/libcuml
          cmake --build . --parallel 8
          make install
          
      - name: Build treelite
        run: |
          git clone https://github.com/dmlc/treelite.git
          cd treelite && mkdir build && cd build
          cmake .. -DCMAKE_INSTALL_PREFIX=/libcuml
          cmake --build . --parallel 8
          make install
          
      - run: |
          zip -r libcuml.zip /libcuml
          
      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: nightly
          assets: libcuml.zip
          
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: libcuml.zip
          name: Nightly
          tag_name: nightly
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/upload-artifact@v2
        with:
          name: libcuml
          path: /libcuml
